[gd_scene load_steps=5 format=2]

[sub_resource type="VisualShaderNodeVec3Constant" id=2]
constant = Vector3( 1, 0.25, 0 )

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Vector:2
	vec3 n_out2p0;
	n_out2p0 = vec3(1.000000,0.250000,0.000000);

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -364.343, 75 )
nodes/fragment/0/position = Vector2( 380, 140 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 60, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="CapsuleMesh" id=1]
material = SubResource( 4 )
radius = 0.25
mid_height = 0.5

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-008, -1, 0, 1, -4.37114e-008, 0, 0.5, 0 )
mesh = SubResource( 1 )
material/0 = null
